{% extends 'model' %}
{% block content%}
from django import template
from django.core.urlresolvers import reverse
from django.contrib.auth.models import User
from builtins import str

register = template.Library()

{{ super() }}

@register.filter
def classname(obj):
	return obj.__class__.__name__ != "QuerySet"

@register.filter
def filternormal(field_names, field_values):
	return [name for name in field_names if field_values[name].__class__.__name__ != "QuerySet"]

@register.filter
def filterlists(field_names, field_values):
	return [name for name in field_names if field_values[name].__class__.__name__ == "QuerySet"]

@register.filter
def is_entity(obj):
{% for form in model.forms -%}
{% if loop.first %}
	if isinstance(obj, {{form.title}}):
		return True
{% else %}
	elif isinstance(obj, {{form.title}}):
		return True
{% endif %}
{% endfor %}
	elif isinstance(obj, User):
		return True
	else:
		return False

@register.filter
def filterurl(obj):
{% for form in model.forms -%}
{% if loop.first %}
	if isinstance(obj, {{form.title}}):
		return reverse('detail{{form.title}}',args=(obj.id,))
{% else %}
	elif isinstance(obj, {{form.title}}):
		return reverse('detail{{form.title}}',args=(obj.id,))
{% endif %}
{% endfor %}
	else:
		return reverse('udetail',args=(obj.id,))

@register.filter
def url_for(obj, url_type):
	{% for form in model.forms -%}
	{% if loop.first %}
		if isinstance(obj, {{form.title}}):
	{% else %}
		elif isinstance(obj, {{form.title}}):
	{% endif %}
			return reverse(url_type+'{{form.title}}',args=(obj.id,))
	{% endfor %}

@register.filter
def linked_add_url(linked_forms, field_name):
	return reverse('add'+linked_forms[field_name])

@register.filter
def get_attribute(o, key):
	return o.__getattribute__(key)

@register.filter
def map_value(dict, key):    
	return dict[key]

def go_depth(toolbar_items):
	for menu in toolbar_items:
		print(menu.label)
		for form in menu.items:
			print(form.name)
		if(menu.subpackages):
			go_depth(menu.subpackages)

@register.filter
def prepare_toolbar(toolbar_items):
	go_depth(toolbar_items)

{% endblock %}

